// Copyright (C) 2020, Edward O'Callaghan.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

#ifndef TECHAIR_ERROR_H
#define TECHAIR_ERROR_H

typedef enum {
	ERROR_NO = 0x0,
	ERROR_INTFLASH = 0x1,
	ERROR_SUPPLY = 0x2,
	ERROR_CRITICAL_BAT = 0x3,
	ERROR_RESET_SQUIB = 0x4,
	ERROR_CONFIG_SQUIB = 0x5,
	ERROR_DIAG_SQUIB = 0x6,
	ERROR_SQUIB_RES = 0x7,
	ERROR_ACC_LEFT_HAND = 0x8,
	ERROR_ACC_RIGHT_HAND = 0x9,
	ERROR_ACC_CENTER = 0xa,
	ERROR_GYRO = 0xb,
	ERROR_ARM_SQUIB = 0xc,
	ERROR_SYNC = 0xd,
	ERROR_SDCARD = 0xe,
	ERROR_ALGOTHRESHOLDS = 0xf,
	ERROR_ACC_LEFT_FOOT = 0x10,
	ERROR_ACC_RIGHT_FOOT = 0x11,
	ERROR_SQUIB2_RES = 0x12,
	ERROR_SUPPLY_LH = 0x13,
	ERROR_SUPPLY_RH = 0x14,
	ERROR_SUPPLY_LF = 0x15,
	ERROR_SUPPLY_RF = 0x16,
	ERROR_INFLATIONTYPE = 0x17,
	ERROR_UNSTABLE = 0x18,
	ERROR_LOCKED = 0x19,
	ERROR_ACC_LEFT_HAND_TEMP = 0x1a,
	ERROR_ACC_RIGHT_HAND_TEMP = 0x1b,
	ERROR_ACC_CENTER_TEMP = 0x1c,
	ERROR_GYRO_TEMP = 0x1d,
	ERROR_ACC_LEFT_FOOT_TEMP = 0x1e,
	ERROR_ACC_RIGHT_FOOT_TEMP = 0x1f,
	WARNING_FIRED = 0x80,
	WARNING_ACC_LEFT_HAND = 0x81,
	WARNING_ACC_RIGHT_HAND = 0x82,
	WARNING_ACC_CENTER = 0x83,
	WARNING_ACC_LEFT_FOOT = 0x84,
	WARNING_ACC_RIGHT_FOOT = 0x85,
	WARNING_SQUIB1_RES = 0x86,
	WARNING_SQUIB2_RES = 0x87,
	WARNING_FIRED2 = 0x88,
	WARNING_SUPPLY_LH = 0x89,
	WARNING_SUPPLY_RH = 0x8a,
	WARNING_SUPPLY_LF = 0x8b,
	WARNING_SUPPLY_RF = 0x8c,
	WARNING_FIREDBOTH = 0x8d,
	ERROR_SD_NO_CARD = 0xc8,
	ERROR_SD_NO_RESET = 0xc9,
	ERROR_SD_CHK_SUPPLY_TIMEOUT = 0xca,
	ERROR_SD_CHK_OCR_TIMEOUT = 0xcb,
	ERROR_SD_CHK_CMD5_TIMEOUT = 0xcc,
	ERROR_SD_CHK_ACMD41_TIMEOUT = 0xcd,
	ERROR_SD_CHK_OCR2_TIMEOUT = 0xce,
	ERROR_SD_CHK_CSD_TIMEOUT = 0xcf,
	ERROR_SD_CHK_STARTBLOCK_TIMEOUT = 0xd0,
	ERROR_SD_CHK_STARTBLOCK_RESPONSE1 = 0xd1,
	ERROR_SD_CHK_STARTBLOCK_RESPONSE2 = 0xd2,
	ERROR_SD_CHK_LASTREC_TIMEOUT = 0xd3,
	ERROR_SD_CHK_LASTREC_RESPONSE = 0xd4,
	ERROR_SD_CHK_SAVENEW_TIMEOUT = 0xd5,
	ERROR_SD_CHK_SAVENEW_RESPONSE = 0xd6,
	ERROR_SD_CHK_SAVENEW_SIZE_TIMEOUT = 0xd7,
	ERROR_SD_CHK_SAVENEW_SIZE_RESPONSE = 0xd8,
	ERROR_SD_CHK_SAVENEW_SIZE_TIMEOUT2 = 0xd9,
	ERROR_SDCARD_INIT = 0xda,
	ERROR_SDCARD_WORK = 0xdb,
	ERROR_SD_INIT_DONE = 0xdc,
	ERROR_SD_INIT_FAILED = 0xdd,
	WARNING_GPS_NO_MODULE = 0x12c,
	WARNING_GPS_NO_COM = 0x12d,
	WARNING_GPS_NO_FIX = 0x12e,
	WARNING_GPS_FIX = 0x12f,
	LAST_ERRORCODE = 0x130,
} acu_error_code_t;

typedef enum {
	ERROR_NO = 0x0,
	ERROR_INTFLASH = 0x1,
	ERROR_SUPPLY = 0x2,
	ERROR_CRITICAL_BAT = 0x3,
	ERROR_RESET_SQUIB = 0x4,
	ERROR_CONFIG_SQUIB = 0x5,
	ERROR_DIAG_SQUIB = 0x6,
	ERROR_SQUIB_RES = 0x7,
	ERROR_ACC_LEFT = 0x8,
	ERROR_ACC_RIGHT = 0x9,
	ERROR_ACC_CENTER = 0xa,
	ERROR_GYRO = 0xb,
	ERROR_ARM_SQUIB = 0xc,
	ERROR_SYNC = 0xd,
	ERROR_SDCARD = 0xe,
	ERROR_ALGOTHRESHOLDS = 0xf,
	ERROR_SUPPLY_LH = 0x10,
	ERROR_SUPPLY_RH = 0x11,
	WARNING_FIRED = 0x12,
	ERROR_SD_NO_CARD = 0xc8,
	ERROR_SD_NO_RESET = 0xc9,
	ERROR_SD_CHK_SUPPLY_TIMEOUT = 0xca,
	ERROR_SD_CHK_OCR_TIMEOUT = 0xcb,
	ERROR_SD_CHK_CMD5_TIMEOUT = 0xcc,
	ERROR_SD_CHK_ACMD41_TIMEOUT = 0xcd,
	ERROR_SD_CHK_OCR2_TIMEOUT = 0xce,
	ERROR_SD_CHK_CSD_TIMEOUT = 0xcf,
	ERROR_SD_CHK_STARTBLOCK_TIMEOUT = 0xd0,
	ERROR_SD_CHK_STARTBLOCK_RESPONSE1 = 0xd1,
	ERROR_SD_CHK_STARTBLOCK_RESPONSE2 = 0xd2,
	ERROR_SD_CHK_LASTREC_TIMEOUT = 0xd3,
	ERROR_SD_CHK_LASTREC_RESPONSE = 0xd4,
	ERROR_SD_CHK_SAVENEW_TIMEOUT = 0xd5,
	ERROR_SD_CHK_SAVENEW_RESPONSE = 0xd6,
	ERROR_SD_CHK_SAVENEW_SIZE_TIMEOUT = 0xd7,
	ERROR_SD_CHK_SAVENEW_SIZE_RESPONSE = 0xd8,
	ERROR_SD_CHK_SAVENEW_SIZE_TIMEOUT2 = 0xd9,
	ERROR_SDCARD_INIT = 0xda,
	ERROR_SDCARD_WORK = 0xdb,
	ERROR_SD_INIT_DONE = 0xdc,
	ERROR_SD_INIT_FAILED = 0xdd,
	WARNING_GPS_NO_MODULE = 0x12c,
	WARNING_GPS_NO_COM = 0x12d,
	WARNING_GPS_NO_FIX = 0x12e,
	WARNING_GPS_FIX = 0x12f,
	LAST_ERRORCODE = 0x130,
} ACU_ERROR_CODES_STREET;

typedef enum {
	ERROR_NO = 0x0,
	ERROR_INTFLASH = 0x1,
	ERROR_SUPPLY = 0x2,
	ERROR_CRITICAL_BAT = 0x3,
	ERROR_RESET_SQUIB = 0x4,
	ERROR_CONFIG_SQUIB = 0x5,
	ERROR_DIAG_SQUIB = 0x6,
	ERROR_SQUIB_RES = 0x7,
	ERROR_ACC_LEFT_HAND = 0x8,
	ERROR_ACC_RIGHT_HAND = 0x9,
	ERROR_ACC_CENTER = 0xa,
	ERROR_GYRO = 0xb,
	ERROR_ARM_SQUIB = 0xc,
	ERROR_SYNC = 0xd,
	ERROR_SDCARD = 0xe,
	ERROR_ALGOTHRESHOLDS = 0xf,
	ERROR_ACC_LEFT_FOOT = 0x10,
	ERROR_ACC_RIGHT_FOOT = 0x11,
	ERROR_SQUIB2_RES = 0x12,
	ERROR_SUPPLY_LH = 0x13,
	ERROR_SUPPLY_RH = 0x14,
	ERROR_SUPPLY_LF = 0x15,
	ERROR_SUPPLY_RF = 0x16,
	WARNING_FIRED = 0x80,
	WARNING_ACC_LEFT_HAND = 0x81,
	WARNING_ACC_RIGHT_HAND = 0x82,
	WARNING_ACC_CENTER = 0x83,
	WARNING_ACC_LEFT_FOOT = 0x84,
	WARNING_ACC_RIGHT_FOOT = 0x85,
	WARNING_SQUIB1_RES = 0x86,
	WARNING_SQUIB2_RES = 0x87,
	WARNING_FIRED2 = 0x88,
	WARNING_SUPPLY_LH = 0x89,
	WARNING_SUPPLY_RH = 0x8a,
	WARNING_SUPPLY_LF = 0x8b,
	WARNING_SUPPLY_RF = 0x8c,
	ERROR_SD_NO_CARD = 0xc8,
	ERROR_SD_NO_RESET = 0xc9,
	ERROR_SD_CHK_SUPPLY_TIMEOUT = 0xca,
	ERROR_SD_CHK_OCR_TIMEOUT = 0xcb,
	ERROR_SD_CHK_CMD5_TIMEOUT = 0xcc,
	ERROR_SD_CHK_ACMD41_TIMEOUT = 0xcd,
	ERROR_SD_CHK_OCR2_TIMEOUT = 0xce,
	ERROR_SD_CHK_CSD_TIMEOUT = 0xcf,
	ERROR_SD_CHK_STARTBLOCK_TIMEOUT = 0xd0,
	ERROR_SD_CHK_STARTBLOCK_RESPONSE1 = 0xd1,
	ERROR_SD_CHK_STARTBLOCK_RESPONSE2 = 0xd2,
	ERROR_SD_CHK_LASTREC_TIMEOUT = 0xd3,
	ERROR_SD_CHK_LASTREC_RESPONSE = 0xd4,
	ERROR_SD_CHK_SAVENEW_TIMEOUT = 0xd5,
	ERROR_SD_CHK_SAVENEW_RESPONSE = 0xd6,
	ERROR_SD_CHK_SAVENEW_SIZE_TIMEOUT = 0xd7,
	ERROR_SD_CHK_SAVENEW_SIZE_RESPONSE = 0xd8,
	ERROR_SD_CHK_SAVENEW_SIZE_TIMEOUT2 = 0xd9,
	ERROR_SDCARD_INIT = 0xda,
	ERROR_SDCARD_WORK = 0xdb,
	ERROR_SD_INIT_DONE = 0xdc,
	ERROR_SD_INIT_FAILED = 0xdd,
	WARNING_GPS_NO_MODULE = 0x12c,
	WARNING_GPS_NO_COM = 0x12d,
	WARNING_GPS_NO_FIX = 0x12e,
	WARNING_GPS_FIX = 0x12f,
	LAST_ERRORCODE = 0x130,
} ACU_ERROR_CODES_RACE;

#endif /* TECHAIR_ERROR_H */
